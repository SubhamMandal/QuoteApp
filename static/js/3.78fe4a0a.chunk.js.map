{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","pages/QuoteDetail.js"],"names":["module","exports","HighlightedQuote","props","history","useHistory","useHttp","deleteQuote","sendRequest","status","error","useEffect","push","className","classes","container","Notification","title","message","quote","text","author","onClick","id","CommentItem","item","CommentsList","comments","map","comment","NewCommentForm","commentTextRef","useRef","addComment","onAddedComment","quoteId","submitFormHandler","event","preventDefault","commentText","current","value","trim","commentData","form","onSubmit","LoadingSpinner","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","length","addedCommentHandler","useCallback","QuoteDetail","params","match","useRouteMatch","getSingleQuote","path","exact","to","url","NoQuotesFound"],"mappings":"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","file":"static/js/3.78fe4a0a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HighlightedQuote_container__1XY2K\",\"dlt-btn\":\"HighlightedQuote_dlt-btn__3IQBG\",\"shake\":\"HighlightedQuote_shake__cC6c8\",\"quote\":\"HighlightedQuote_quote__34naT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3CVIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__h2SVh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2nR9f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__37xtd\",\"loading\":\"NewCommentForm_loading__2Z5Wq\",\"control\":\"NewCommentForm_control__3aX6W\",\"actions\":\"NewCommentForm_actions__3mVPG\"};","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { deleteQuote } from '../../lib/api';\nimport Notification from '../UI/Notification';\nimport classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  const history = useHistory();\n  const { sendRequest, status, error } = useHttp(deleteQuote);\n\n  const deleteQuoteHandler = () => {\n    sendRequest(props.id);\n  }\n\n  useEffect(() => {\n    if (!error && status === 'completed') {\n      history.push('/quotes');\n    }\n  }, [status, error, history]);\n\n  return (\n    <section className={classes.container}>\n      {error && <Notification status='error' title='ERROR' message='Failed to delete' />}\n      <figure className={classes.quote}>\n        <p>' {props.text} '</p>\n        <figcaption>~ {props.author}</figcaption>\n      </figure>\n      <i className={`fa-solid fa-trash-can ${classes['dlt-btn']}`} onClick={deleteQuoteHandler}></i>\n    </section>\n  );\n};\n\nexport default HighlightedQuote;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport Notification from '../UI/Notification';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment, quoteId } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const commentText = commentTextRef.current.value;\n    // optional: Could validate here\n\n    // send comment to server\n    if (commentText.trim() === '') {\n      return;\n    }\n    sendRequest({\n      commentData: { text: commentText },\n      quoteId: quoteId,\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && <div className='centered'><LoadingSpinner /></div>}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n      {error && <Notification status='error' title='ERROR' message='Failed to comment' />}\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport Notification from '../UI/Notification';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const { sendRequest, status, data: loadedComments, error } = useHttp(getAllComments, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  let comments;\n  if (status === 'pending') {\n    comments = <div className='centered'><LoadingSpinner /></div>;\n  }\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments}/>;\n  }\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = <p>No comments yet</p>;\n  }\n  if (error) {\n    comments = <p>Unable to load comments!</p>\n  }\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n    setIsAddingComment(false);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addedCommentHandler} />}\n      {comments}\n      {error && <Notification status='error' title='ERROR' message='Failed to load comments' />}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment, useEffect } from \"react\";\r\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport Comments from \"../components/comments/Comments\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\n// const DUMMY_QUOTES = [\r\n//     { id: 'q1', author: 'Subham', text: 'You do not give up until the very end.' },\r\n//     { id: 'q2', author: 'Mandal', text: \"Sometimes you don't know what to do, and that's absolutly okay!\" },\r\n// ];\r\n\r\nconst QuoteDetail = () => {\r\n    const params = useParams();\r\n    const match = useRouteMatch();\r\n    const { sendRequest, status, data: quote, error } = useHttp(getSingleQuote, true);\r\n    // const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\r\n\r\n    const { quoteId } = params;\r\n    useEffect(() => {\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId]);\r\n\r\n    if (status === 'pending') {\r\n        return <div className=\"centered\"><LoadingSpinner /></div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"centered focused\">{error}</div>;\r\n    }\r\n\r\n    if (!quote.text) {\r\n        return <NoQuotesFound />;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <HighlightedQuote id={quote.id} text={quote.text} author={quote.author} />\r\n            <Route path={`${match.path}`} exact>\r\n                <div className=\"centered\">\r\n                    <Link to={`${match.url}/comment`} className='btn--flat'>Load Comments</Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comment`} >\r\n                <Comments />\r\n            </Route>\r\n        </Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default QuoteDetail;"],"sourceRoot":""}